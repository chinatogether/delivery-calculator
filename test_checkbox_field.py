#!/usr/bin/env python3
"""
–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è checkbox –ø–æ–ª—è –≤ Google Forms
"""

import requests
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_checkbox_variations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è checkbox –ø–æ–ª—è"""
    
    form_url = "https://docs.google.com/forms/d/e/1FAIpQLSfONB0hP9sCKurPmcyuHyAj_ffmF2tmLrum9kKlyMSWqDGm_w/formResponse"
    
    # –†–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è checkbox
    checkbox_variations = [
        # –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ —Ñ–æ—Ä–º—ã
        '–Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω(–∞) —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Ä–∞–±–æ—Ç—ã –∏ –≤—ã—Ä–∞–∂–∞—é —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –Ω–∏–º–∏.',
        # –ö–æ—Ä–æ—Ç–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        'on',
        'true',
        '1',
        'checked',
        # –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è Google Forms checkbox
        '–Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω(–∞) —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Ä–∞–±–æ—Ç—ã –∏ –≤—ã—Ä–∞–∂–∞—é —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –Ω–∏–º–∏.',
    ]
    
    print("üî≤ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CHECKBOX –ü–û–õ–Ø")
    print("=" * 50)
    print("üìã Entry ID: entry.363561279")
    print("üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è...")
    print()
    
    session = requests.Session()
    session.headers.update({
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        'Content-Type': 'application/x-www-form-urlencoded'
    })
    
    successful_values = []
    
    for i, checkbox_value in enumerate(checkbox_variations, 1):
        print(f"üß™ –¢–µ—Å—Ç {i}: {checkbox_value[:50]}{'...' if len(checkbox_value) > 50 else ''}")
        
        # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∞
        test_data = {
            'emailAddress': f'test{i}@example.com',
            'entry.1244169801': f'@test_user_{i}',
            'entry.363561279': checkbox_value  # –¢–µ—Å—Ç–∏—Ä—É–µ–º–æ–µ checkbox –∑–Ω–∞—á–µ–Ω–∏–µ
        }
        
        try:
            response = session.post(
                form_url,
                data=test_data,
                timeout=15,
                allow_redirects=True
            )
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            success_indicators = ['formresponse', 'thanks', 'submitted', 'viewanalytics']
            response_url_lower = response.url.lower()
            is_success = any(indicator in response_url_lower for indicator in success_indicators)
            
            if response.status_code == 200 and is_success:
                print(f"   ‚úÖ –£–°–ü–ï–•! –ó–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                successful_values.append(checkbox_value)
            else:
                print(f"   ‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (—Å—Ç–∞—Ç—É—Å: {response.status_code}, URL: {response.url})")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print()
    
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("=" * 40)
    
    if successful_values:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(successful_values)} —Ä–∞–±–æ—á–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π:")
        for value in successful_values:
            print(f"   - {value[:70]}{'...' if len(value) > 70 else ''}")
        
        print(f"\nüìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
        print(f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–æ–¥–µ:")
        print(f"'{successful_values[0]}'")
        
    else:
        print("‚ùå –ù–∏ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π entry ID")
        print("   2. –§–æ—Ä–º–∞ —Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π")
        print("   3. –ò–∑–º–µ–Ω–∏–ª–∏—Å—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º—ã")

def create_checkbox_test_links():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ checkbox"""
    
    base_url = "https://docs.google.com/forms/d/e/1FAIpQLSfONB0hP9sCKurPmcyuHyAj_ffmF2tmLrum9kKlyMSWqDGm_w/viewform"
    
    # –†–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è checkbox
    test_values = [
        '–Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω(–∞) —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Ä–∞–±–æ—Ç—ã –∏ –≤—ã—Ä–∞–∂–∞—é —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –Ω–∏–º–∏.',
        'on',
        'true',
        '1'
    ]
    
    print(f"\nüîó –¢–ï–°–¢–û–í–´–ï –°–°–´–õ–ö–ò –î–õ–Ø –†–£–ß–ù–û–ô –ü–†–û–í–ï–†–ö–ò CHECKBOX:")
    print("=" * 60)
    
    for i, value in enumerate(test_values, 1):
        # –ë–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        params = {
            'emailAddress': 'test@example.com',
            'entry.1244169801': '@test_user',
            'entry.363561279': value  # Checkbox –∑–Ω–∞—á–µ–Ω–∏–µ
        }
        
        params_str = '&'.join([f"{k}={requests.utils.quote(str(v))}" for k, v in params.items()])
        test_url = f"{base_url}?{params_str}"
        
        print(f"\n{i}. –¢–µ—Å—Ç –∑–Ω–∞—á–µ–Ω–∏—è: {value[:50]}{'...' if len(value) > 50 else ''}")
        print(f"   {test_url}")
    
    print(f"\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞–∂–¥—É—é —Å—Å—ã–ª–∫—É")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –≥–∞–ª–æ—á–∫–∞ –≤ checkbox")
    print("3. –ï—Å–ª–∏ –¥–∞ - —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üî≤ –°–ü–ï–¶–ò–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CHECKBOX –ü–û–õ–Ø")
    print("=" * 55)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏
    create_checkbox_test_links()
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï:")
    print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞—è–≤–æ–∫ –≤ —Ñ–æ—Ä–º—É.")
    print("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ", end="")
    
    try:
        choice = input().lower().strip()
        if choice in ['y', 'yes', '–¥–∞', '–¥']:
            print()
            test_checkbox_variations()
        else:
            print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")
            print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –≤—ã—à–µ –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏.")
    except KeyboardInterrupt:
        print("\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")

if __name__ == "__main__":
    main()
