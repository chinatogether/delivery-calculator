import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from dotenv import load_dotenv
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = os.getenv('API_ZAYAVKI_TOKEN') or "–í–°–¢–ê–í–¨–¢–ï_–¢–û–ö–ï–ù_–°–Æ–î–ê"

if BOT_TOKEN == "–í–°–¢–ê–í–¨–¢–ï_–¢–û–ö–ï–ù_–°–Æ–î–ê":
    print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é BOT_TOKEN")
    exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def start_command(message: types.Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    chat_info = (
        f"ü§ñ <b>Chat ID Bot</b>\n\n"
        f"üë§ <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n"
        f"üÜî <b>User ID:</b> <code>{message.from_user.id}</code>\n"
        f"üë§ <b>–ò–º—è:</b> {message.from_user.first_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
        f"üì± <b>Username:</b> @{message.from_user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\n"
        f"üí¨ <b>–î–∞–Ω–Ω—ã–µ —á–∞—Ç–∞:</b>\n"
        f"üÜî <b>Chat ID:</b> <code>{message.chat.id}</code>\n"
        f"üìã <b>–¢–∏–ø —á–∞—Ç–∞:</b> {message.chat.type}\n"
    )
    
    if message.chat.type in ['group', 'supergroup']:
        chat_info += f"üè∑Ô∏è <b>–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã:</b> {message.chat.title or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
        chat_info += f"üë• <b>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b> {message.chat.member_count or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n"
    
    chat_info += (
        f"\nüí° <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</b>\n"
        f"1. –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤ –≤–∞—à—É –≥—Ä—É–ø–ø—É\n"
        f"2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /chatid –≤ –≥—Ä—É–ø–ø–µ\n"
        f"3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Chat ID –¥–ª—è .env —Ñ–∞–π–ª–∞\n\n"
        f"üìã <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        f"/chatid - –ü–æ–ª—É—á–∏—Ç—å Chat ID\n"
        f"/info - –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
        f"/help - –°–ø—Ä–∞–≤–∫–∞"
    )
    
    await message.answer(chat_info, parse_mode='HTML')

@dp.message(Command("chatid"))
async def chatid_command(message: types.Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Chat ID"""
    chat_type_emoji = {
        'private': 'üë§',
        'group': 'üë•',
        'supergroup': 'üë•',
        'channel': 'üì¢'
    }
    
    emoji = chat_type_emoji.get(message.chat.type, 'üí¨')
    
    response = (
        f"{emoji} <b>Chat ID Information</b>\n\n"
        f"üÜî <b>Chat ID:</b> <code>{message.chat.id}</code>\n"
        f"üìã <b>–¢–∏–ø:</b> {message.chat.type}\n"
    )
    
    if message.chat.type in ['group', 'supergroup']:
        response += f"üè∑Ô∏è <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {message.chat.title or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n"
        response += f"\n‚úÖ <b>–î–ª—è .env —Ñ–∞–π–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b>\n"
        response += f"<code>TELEGRAM_NOTIFICATIONS_CHAT_ID={message.chat.id}</code>\n"
    elif message.chat.type == 'private':
        response += f"üë§ <b>–ò–º—è:</b> {message.from_user.first_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
        response += f"üì± <b>Username:</b> @{message.from_user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        response += f"\n‚úÖ <b>–î–ª—è .env —Ñ–∞–π–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b>\n"
        response += f"<code>TELEGRAM_ADMIN_CHAT_IDS={message.from_user.id}</code>\n"
    
    response += f"\nüìã <b>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ Chat ID –≤—ã—à–µ ‚¨ÜÔ∏è</b>"
    
    await message.answer(response, parse_mode='HTML')

@dp.message(Command("info"))
async def info_command(message: types.Message):
    """–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ"""
    info = (
        f"üìä <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ</b>\n\n"
        f"üÜî <b>Chat ID:</b> <code>{message.chat.id}</code>\n"
        f"üìã <b>–¢–∏–ø —á–∞—Ç–∞:</b> {message.chat.type}\n"
    )
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ
    if message.chat.title:
        info += f"üè∑Ô∏è <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {message.chat.title}\n"
    if message.chat.description:
        info += f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {message.chat.description[:100]}...\n"
    if message.chat.username:
        info += f"üîó <b>Username:</b> @{message.chat.username}\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    info += f"\nüë§ <b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</b>\n"
    info += f"üÜî <b>User ID:</b> <code>{message.from_user.id}</code>\n"
    info += f"üë§ <b>–ò–º—è:</b> {message.from_user.first_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
    if message.from_user.last_name:
        info += f"üë§ <b>–§–∞–º–∏–ª–∏—è:</b> {message.from_user.last_name}\n"
    if message.from_user.username:
        info += f"üì± <b>Username:</b> @{message.from_user.username}\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
    info += f"\nüì® <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>\n"
    info += f"üÜî <b>Message ID:</b> {message.message_id}\n"
    info += f"üìÖ <b>–î–∞—Ç–∞:</b> {message.date.strftime('%d.%m.%Y %H:%M:%S')}\n"
    
    await message.answer(info, parse_mode='HTML')

@dp.message(Command("help"))
async def help_command(message: types.Message):
    """–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
    help_text = (
        f"‚ùì <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ Chat ID Bot</b>\n\n"
        f"üéØ <b>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:</b>\n"
        f"–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—É—á–∏—Ç—å Chat ID –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ China Together.\n\n"
        f"üìã <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        f"/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
        f"/chatid - –ü–æ–ª—É—á–∏—Ç—å Chat ID —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞\n"
        f"/info - –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ\n"
        f"/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
        f"üì± <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>\n"
        f"1. <b>–î–ª—è –ª–∏—á–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:</b>\n"
        f"   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /chatid –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö\n"
        f"   ‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à User ID\n\n"
        f"2. <b>–î–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:</b>\n"
        f"   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É\n"
        f"   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /chatid –≤ –≥—Ä—É–ø–ø–µ\n"
        f"   ‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Chat ID –≥—Ä—É–ø–ø—ã\n\n"
        f"‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env:</b>\n"
        f"<code>API_ZAYAVKI_TOKEN=—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞</code>\n"
        f"<code>TELEGRAM_NOTIFICATIONS_CHAT_ID=ID_–≥—Ä—É–ø–ø—ã</code>\n"
        f"<code>TELEGRAM_ADMIN_CHAT_IDS=–≤–∞—à_ID</code>\n\n"
        f"üí° <b>–°–æ–≤–µ—Ç:</b> Chat ID –≥—Ä—É–ø–ø—ã –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å -100"
    )
    
    await message.answer(help_text, parse_mode='HTML')

@dp.message()
async def any_message(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    response = (
        f"üì® <b>–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!</b>\n\n"
        f"üÜî <b>Chat ID:</b> <code>{message.chat.id}</code>\n"
        f"üë§ <b>–û—Ç:</b> {message.from_user.first_name or '–ê–Ω–æ–Ω–∏–º'}\n"
        f"üìã <b>–¢–∏–ø —á–∞—Ç–∞:</b> {message.chat.type}\n\n"
        f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /chatid –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Chat ID"
    )
    
    await message.answer(response, parse_mode='HTML')

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        print(f"ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: @{bot_info.username}")
        print(f"üÜî Bot ID: {bot_info.id}")
        print(f"üìã –¢–æ–∫–µ–Ω: {BOT_TOKEN[:10]}...")
        print(f"‚úÖ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print(f"\nüí° –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /chatid")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º polling
        await dp.start_polling(bot)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

if __name__ == '__main__':
    asyncio.run(main())
