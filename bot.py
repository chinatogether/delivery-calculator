import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import (
    InlineKeyboardMarkup, 
    InlineKeyboardButton, 
    WebAppInfo, 
    CallbackQuery,
    ReplyKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardRemove,
    FSInputFile,
    BotCommand
)
from aiogram.types.web_app_data import WebAppData
from aiogram.fsm.storage.memory import MemoryStorage
from dotenv import load_dotenv
import os
import json
import logging
import psycopg2
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
API_TOKEN = os.getenv('API_TOKEN')
WEB_APP_URL = os.getenv('WEB_APP_URL', 'https://china-together.ru')

# –ü—É—Ç—å –∫ PDF —Ñ–∞–π–ª—É —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏
TARIFFS_PDF_PATH = "/home/chinatogether/xlsx-web/pdf-files/china_together_tariffs.pdf"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# FAQ –¥–∞–Ω–Ω—ã–µ
FAQ_DATA = {
    "üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞": (
        "üí∞ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞</b>\n\n"
        "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>3000 —é–∞–Ω–µ–π</b> –Ω–∞ –æ–¥–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞."
    ),
    "‚öñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å": (
        "‚öñÔ∏è <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ</b>\n\n"
        "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>10 –∫–≥/–º–µ—Å—Ç–æ</b>."
    ),
    "üì¶ –ß—Ç–æ —Ç–∞–∫–æ–µ –º–µ—Å—Ç–æ": (
        "üì¶ <b>–ß—Ç–æ —Ç–∞–∫–æ–µ ¬´–ú–µ—Å—Ç–æ¬ª?</b>\n\n"
        "–ì—Ä—É–∑–æ–≤–æ–µ –º–µ—Å—Ç–æ ‚Äî —ç—Ç–æ –æ–¥–Ω–∞ –µ–¥–∏–Ω–∏—Ü–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–∑–∫–∏, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ –æ–¥–Ω–æ–π –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–æ—Ä–æ–±–æ–∫ —Ç–æ–≤–∞—Ä–∞.\n\n"
        "üí° <b>–ü—Ä–∏–º–µ—Ä:</b> —Ç–æ–≤–∞—Ä 200 –µ–¥–∏–Ω–∏—Ü –ø—Ä–∏–µ–∑–∂–∞–µ—Ç –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤ 2-—Ö –∫–æ—Ä–æ–±–∫–∞—Ö, –º—ã –Ω–∞ —Å–∫–ª–∞–¥–µ –¥–µ–ª–∞–µ–º "
        "–¥–µ—Ä–µ–≤—è–Ω–Ω—ã–π –∫–∞—Ä–∫–∞—Å, –æ–±—ä–µ–¥–∏–Ω—è—è –æ–±–µ –∫–æ—Ä–æ–±–∫–∏. –ü–æ—Å–ª–µ —á–µ–≥–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –æ–¥–Ω–æ –≥—Ä—É–∑–æ–≤–æ–µ –º–µ—Å—Ç–æ."
    ),
    "üì¶ –í–∏–¥—ã —É–ø–∞–∫–æ–≤–∫–∏": (
        "üì¶ <b>–í–∏–¥—ã —É–ø–∞–∫–æ–≤–∫–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å</b>\n\n"
        "‚Ä¢ <b>–ú–µ—à–æ–∫ + —Å–∫–æ—Ç—á:</b> 3$/–º–µ—Å—Ç–æ\n"
        "‚Ä¢ <b>–ö–∞—Ä—Ç–æ–Ω–Ω—ã–µ —É–≥–æ–ª–∫–∏ + –º–µ—à–æ–∫ + —Å–∫–æ—Ç—á:</b> 8$/–º–µ—Å—Ç–æ\n"
        "‚Ä¢ <b>–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –∫–∞—Ä–∫–∞—Å + –º–µ—à–æ–∫ + —Å–∫–æ—Ç—á:</b> 15$/–º–µ—Å—Ç–æ\n"
        "‚Ä¢ <b>–ü–∞–ª–µ—Ç–∞</b> (–¥–µ—Ä–µ–≤—è–Ω–Ω—ã–π –ø–æ–¥–¥–æ–Ω + –≤–æ–¥–æ–∑–∞—â–∏—Ç–Ω–∞—è –ø–ª–µ–Ω–∫–∞ + –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–π –∫–∞—Ä–∫–∞—Å + —Å–∫–æ—Ç—á): 30$/–∫—É–±"
    ),
    "üïê –°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏": (
        "üïê <b>–°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ç–æ–≤–∞—Ä–æ–≤</b>\n\n"
        "üìå <b>–û–±—ã—á–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:</b>\n"
        "‚Äî –ë—ã—Å—Ç—Ä–æ–µ –∞–≤—Ç–æ: —Å–Ω–∏–∂–µ–Ω–∞ —Ü–µ–Ω–∞üìâ\n"
        "‚Äî –û–±—ã—á–Ω–æ–µ –∞–≤—Ç–æ: —Å–Ω–∏–∂–µ–Ω–∞ —Ü–µ–Ω–∞üìâ\n"
        "<b>–°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏:</b>\n"
        "‚Äî –±—ã—Å—Ç—Ä–æ–µ –∞–≤—Ç–æ: 13‚Äì16 –¥–Ω–µ–π\n"
        "‚Äî –æ–±—ã—á–Ω–æ–µ –∞–≤—Ç–æ: 17‚Äì25 –¥–Ω–µ–π\n\n"
        "üìå <b>–û–¥–µ–∂–¥–∞:</b>\n"
        "‚Äî –ë—ã—Å—Ç—Ä–æ–µ –∞–≤—Ç–æ: —Å–Ω–∏–∂–µ–Ω–∞ —Ü–µ–Ω–∞üìâ\n"
        "‚Äî –û–±—ã—á–Ω–æ–µ –∞–≤—Ç–æ: —Å–Ω–∏–∂–µ–Ω–∞ —Ü–µ–Ω–∞üìâ\n"
        "<b>–°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏:</b>\n"
        "‚Äî –±—ã—Å—Ç—Ä–æ–µ –∞–≤—Ç–æ: 15‚Äì18 –¥–Ω–µ–π\n"
        "‚Äî –æ–±—ã—á–Ω–æ–µ –∞–≤—Ç–æ: 20‚Äì25 –¥–Ω–µ–π\n\n"
        "üìå <b>–û–±—É–≤—å:</b>\n"
        "‚Äî –ë—ã—Å—Ç—Ä–æ–µ –∞–≤—Ç–æ: —Å–Ω–∏–∂–µ–Ω–∞ —Ü–µ–Ω–∞üìâ\n"
        "<b>–°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏:</b>\n"
        "‚Äî –±—ã—Å—Ç—Ä–æ–µ –∞–≤—Ç–æ: 12‚Äì15 –¥–Ω–µ–π"
    ),
    "üìã –°—Ç—Ä–∞—Ö–æ–≤–∫–∞": (
        "üìã <b>–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</b>\n\n"
        "–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ, –∫—Ä–∞–∂–µ –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ–π –ø—Ä–æ–ø–∞–∂–µ —Ç–æ–≤–∞—Ä–∞. –ö–∞—Ä–≥–æ –Ω–µ –≤–æ–∑–º–µ—â–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –ø–æ–º—è—Ç—É—é —É–ø–∞–∫–æ–≤–∫—É.\n\n"
        "<b>–¢–∞—Ä–∏—Ñ—ã —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è:</b>\n"
        "‚Ä¢ –¥–æ 20$/–∫–≥ ‚Äî <b>1%</b> –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏\n"
        "‚Ä¢ 20-30$/–∫–≥ ‚Äî <b>2%</b> –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏\n"
        "‚Ä¢ 30-40$/–∫–≥ ‚Äî <b>3%</b> –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏\n"
        "‚Ä¢ —Å–≤—ã—à–µ 40$/–∫–≥ ‚Äî <b>–æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ</b>\n\n"
        "‚ö†Ô∏è <b>–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –∫ –ø–µ—Ä–µ–≤–æ–∑–∫–µ —Ç–æ–≤–∞—Ä—ã:</b> –ø–æ—Ä–æ—à–∫–æ–≤—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞, –ª–µ–≥–∫–æ–≤–æ—Å–ø–ª–∞–º–µ–Ω—è—é—â–∏–µ—Å—è –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∂–∏–¥–∫–æ—Å—Ç–∏, —Ç–∞–±–∞—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è, –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã, —Ä–µ–∂—É—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –ø—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è."
    ),
    "üí≥ –ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞": (
        "üí≥ <b>–ü—Ä–æ—Ü–µ—Å—Å –æ–ø–ª–∞—Ç—ã</b>\n\n"
        "1Ô∏è‚É£ <b>–°–Ω–∞—á–∞–ª–∞ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è:</b>\n"
        "‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞\n"
        "‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö–∏—Ç–∞—é\n"
        "‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è –∑–∞ –≤—ã–∫—É–ø\n\n"
        "2Ô∏è‚É£ <b>–î–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –†–æ—Å—Å–∏–∏</b> –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –ø–æ –ø—Ä–∏–µ–∑–¥—É –≤ –ú–æ—Å–∫–≤—É, –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É."
    ),
    "üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã": (
        "üí∏ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã</b>\n\n"
        "‚Ä¢ üè¶ –ö–∞—Ä—Ç—ã <b>–¢-–±–∞–Ω–∫ (–¢–∏–Ω—å–∫–æ—Ñ—Ñ)/ –ê–ª—å—Ñ–∞–±–∞–Ω–∫</b>\n"
        "‚Ä¢ üì± <b>–°–ë–ü</b> (–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π)\n"
        "‚Ä¢ üí∞ <b>USDT</b>\n"
        "‚Ä¢ üí∏ <b>–ù–∞–ª–∏—á–Ω—ã–º–∏ –≤ –ú–æ—Å–∫–≤–µ</b>"
    ),
    "üè¢ –ö—É–¥–∞ –ø—Ä–∏–µ–∑–∂–∞–µ—Ç —Ç–æ–≤–∞—Ä": (
        "üè¢ <b>–ú–µ—Å—Ç–æ –ø–æ–ª—É—á–µ–Ω–∏—è –≤ –ú–æ—Å–∫–≤–µ</b>\n\n"
        "–¢–æ–≤–∞—Ä –ø—Ä–∏–µ–∑–∂–∞–µ—Ç –Ω–∞ <b>–Æ–∂–Ω—ã–µ –≤–æ—Ä–æ—Ç–∞</b> –≤ –ú–æ—Å–∫–≤–µ."
    ),
    "üöõ –î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ä–µ–≥–∏–æ–Ω—ã": (
        "üöõ <b>–î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ä–µ–≥–∏–æ–Ω—ã</b>\n\n"
        "‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ <b>–≤—Å–µ–º –≥–æ—Ä–æ–¥–∞–º –†–æ—Å—Å–∏–∏</b>\n\n"
        "–ù–∞ –Æ–∂–Ω—ã—Ö –≤–æ—Ä–æ—Ç–∞—Ö –≤ –ú–æ—Å–∫–≤–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤—Å–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏:\n"
        "‚Ä¢ –ñ–µ–ª–î–æ—Ä–≠–∫—Å–ø–µ–¥–∏—Ü–∏—è\n"
        "‚Ä¢ –°–î–≠–ö\n"
        "‚Ä¢ –ü–≠–ö\n"
        "‚Ä¢ –î–µ–ª–æ–≤—ã–µ –ª–∏–Ω–∏–∏\n"
        "‚Ä¢ –ë–∞–π–∫–∞–ª\n"
        "‚Ä¢ –ú–µ–π–¥–∂–∏–∫ –∏ –¥—Ä—É–≥–∏–µ."
    ),
    "‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è": (
        "‚ÑπÔ∏è <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∑–∞–∫–∞–∑—á–∏–∫–æ–≤</b>\n\n"
        "<b>üî∏ –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –Ω–∞—à—É –∫–æ–º–∏—Å—Å–∏—é:</b>\n"
        "‚Ä¢ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å—á—ë—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –ú–æ—Å–∫–≤—ã\n"
        "‚Ä¢ –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã –∏ —Å—Ä–æ–∫–æ–≤ –æ—Ç–≥—Ä—É–∑–∫–∏\n"
        "‚Ä¢ –û–±—â–µ–Ω–∏–µ —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ç–æ–≤–∞—Ä–∞\n"
        "‚Ä¢ –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏ –æ–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞\n"
        "‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –ö–∏—Ç–∞—é\n"
        "‚Ä¢ –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è –≥—Ä—É–∑–∞ –Ω–∞ –Ω–∞—à–µ–º —Å–∫–ª–∞–¥–µ\n"
        "‚Ä¢ –§–æ—Ç–æ–æ—Ç—á—ë—Ç –∏ —É–ø–∞–∫–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–∞\n"
        "‚Ä¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –ú–æ—Å–∫–≤—ã\n\n"
        "<b>üî∏ –°—Ä–æ–∫–∏:</b>\n"
        "‚Ä¢ –û—Ç–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º: 2-7 –¥–Ω–µ–π\n"
        "‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö–∏—Ç–∞—é: 1-5 –¥–Ω–µ–π\n"
        "‚Ä¢ –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞: –¥–æ 8 –≤–µ—á–µ—Ä–∞ –ø–æ –∫–∏—Ç–∞–π—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏\n\n"
        "<b>üì∫ –ù–∞—à –∫–∞–Ω–∞–ª —Å –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π:</b>\n"
        "üîó <a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>"
    ),
    "üìã –ü—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä—É–∑–∞": (
        "üìã <b>–ü–†–ò–ù–ò–ú–ê–ô–¢–ï –ì–†–£–ó –ü–†–ê–í–ò–õ–¨–ù–û!</b>\n\n"
        "‚ùó <b>–í–∞–∂–Ω–æ:</b> –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä—É–∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–≤–µ–∑—Ç–∏ —Ç–æ–≤–∞—Ä –¥–æ–º–æ–π –∏ –Ω–∞–ø–∏—Å–∞—Ç—å, —á—Ç–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç.\n\n"
        "<b>üé• –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:</b>\n"
        "‚Ä¢ –°–Ω–∏–º–∏—Ç–µ <b>–≤–∏–¥–µ–æ –≤—Å–∫—Ä—ã—Ç–∏—è –≥—Ä—É–∑–∞</b>\n"
        "‚Ä¢ –ü–æ–∫–∞–∂–∏—Ç–µ –≤–Ω–µ—à–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–ø–∞–∫–æ–≤–∫–∏\n"
        "‚Ä¢ –ó–∞—Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç –≤—Å–∫—Ä—ã—Ç–∏—è –¥–æ –ø–µ—Ä–µ—Å—á–µ—Ç–∞ —Ç–æ–≤–∞—Ä–∞\n\n"
        "<b>‚ö†Ô∏è –ü—Ä–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–∏ —É–ø–∞–∫–æ–≤–∫–∏:</b>\n"
        "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ –Ω–∞ –≤–∏–¥–µ–æ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è —É–ø–∞–∫–æ–≤–∫–∏ –∏ —Å–ª–µ–¥–æ–≤ –≤—Å–∫—Ä—ã—Ç–∏—è!\n\n"
        "<b>üìÖ –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã:</b> –ü–ù-–ü–¢ —Å 10:00 –¥–æ 18:00 (–ú–°–ö)\n\n"
        "–ë–µ–∑ –≤–∏–¥–µ–æ - –≤–æ–ø—Ä–æ—Å—ã –æ –≤–æ–∑–º–µ—â–µ–Ω–∏–∏ –∏–ª–∏ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç."
    )
}
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DB_CONFIG = {
            'dbname': os.getenv('DB_NAME', 'delivery_db'),
            'user': os.getenv('DB_USER'), 
            'password': os.getenv('DB_PASSWORD'),
            'host': os.getenv('DB_HOST', 'localhost'),
            'port': os.getenv('DB_PORT', '5432'),
            'connect_timeout': int(os.getenv('DB_TIMEOUT', '10'))
}

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def connect_to_db():
    try:
        return psycopg2.connect(**DB_CONFIG)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def save_user_action(telegram_id, action, details=None):
    conn = connect_to_db()
    if not conn:
        return
    
    try:
        cursor = conn.cursor()
        cursor.execute("""
            INSERT INTO delivery_test.user_actions (telegram_user_id, action, details, created_at)
            VALUES (%s, %s, %s, CURRENT_TIMESTAMP)
        """, (telegram_id, action, json.dumps(details) if details else None))
        conn.commit()
        cursor.close()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è: {e}")
    finally:
        conn.close()

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
async def set_bot_commands():
    commands = [
        BotCommand(command="calculate", description="üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É"),
        BotCommand(command="order", description="üöö –ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É"),
        BotCommand(command="tariffs", description="üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã"),
        BotCommand(command="help", description="‚ùì –ü–æ–º–æ—â—å"),
        BotCommand(command="faq", description="‚ùì –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"),
        BotCommand(command="restart", description="üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand(command="feedback", description="üìù –û—Ç–∑—ã–≤—ã"),
        BotCommand(command="channel", description="üì∫ –ù–∞—à –∫–∞–Ω–∞–ª")
    ]
    await bot.set_my_commands(commands)

# –°–æ–∑–¥–∞–Ω–∏–µ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–¥—É–±–ª–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞)
def get_main_reply_keyboard():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É"),
                KeyboardButton(text="üöö –ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É")
            ],
            [
                KeyboardButton(text="üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã"),
                KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")
            ],
            [
                KeyboardButton(text="‚ùì –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"),
                KeyboardButton(text="üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
            ],
            [
                KeyboardButton(text="üìù –û—Ç–∑—ã–≤—ã"),
                KeyboardButton(text="üì∫ –ù–∞—à –∫–∞–Ω–∞–ª")
            ]
        ],
        resize_keyboard=True,
        one_time_keyboard=False,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –±–æ—Ç–∞..."
    )
    return keyboard

# –°–æ–∑–¥–∞–Ω–∏–µ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è FAQ
def get_faq_inline_keyboard():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞", callback_data="faq_min_order")],
        [InlineKeyboardButton(text="‚öñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å", callback_data="faq_min_weight")],
        [InlineKeyboardButton(text="üì¶ –ß—Ç–æ —Ç–∞–∫–æ–µ –º–µ—Å—Ç–æ", callback_data="faq_place")],
        [InlineKeyboardButton(text="üì¶ –í–∏–¥—ã —É–ø–∞–∫–æ–≤–∫–∏", callback_data="faq_packaging")],
        [InlineKeyboardButton(text="üïê –°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏", callback_data="faq_delivery_times")],
        [InlineKeyboardButton(text="üìã –°—Ç—Ä–∞—Ö–æ–≤–∫–∞", callback_data="faq_insurance")],
        [InlineKeyboardButton(text="üí≥ –ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞", callback_data="faq_payment")],
        [InlineKeyboardButton(text="üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã", callback_data="faq_payment_methods")],
        [InlineKeyboardButton(text="üè¢ –ö—É–¥–∞ –ø—Ä–∏–µ–∑–∂–∞–µ—Ç —Ç–æ–≤–∞—Ä", callback_data="faq_delivery_location")],
        [InlineKeyboardButton(text="üöõ –î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ä–µ–≥–∏–æ–Ω—ã", callback_data="faq_regions")],
        [InlineKeyboardButton(text="‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="faq_additional_info")],
        [InlineKeyboardButton(text="üìã –ü—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä—É–∑–∞", callback_data="faq_cargo_rules")]
    ])
    return keyboard

# –°–æ–∑–¥–∞–Ω–∏–µ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
def get_webapp_inline_keyboard(user_id, username, action="calculate"):
    if action == "calculate":
        web_app_url = f"{WEB_APP_URL}/calculate?telegram_id={user_id}&username={username}"
        button_text = "üìä –û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"
    else:  # order
        web_app_url = f"{WEB_APP_URL}/order?telegram_id={user_id}&username={username}"
        button_text = "üöö –û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –∑–∞–∫–∞–∑–∞"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text=button_text, 
            web_app=WebAppInfo(url=web_app_url)
        )]
    ])
    return keyboard

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ PDF —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏
async def send_tariffs_pdf(message: types.Message, user_id: int):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç PDF —Ñ–∞–π–ª —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —Ç–∞—Ä–∏—Ñ–∞–º–∏"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if not os.path.exists(TARIFFS_PDF_PATH):
            await message.reply(
                "‚ùå <b>–§–∞–π–ª —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω</b>\n\n"
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤:",
                parse_mode="HTML"
            )
            save_user_action(user_id, "tariffs_file_not_found")
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        loading_message = await message.reply(
            "üìã <b>–ó–∞–≥—Ä—É–∂–∞—é –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã...</b>\n\n"
            "‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, —Ñ–∞–π–ª –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ.",
            parse_mode="HTML"
        )
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ñ–∞–π–ª–∞
        document = FSInputFile(TARIFFS_PDF_PATH)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        await message.reply_document(
            document=document,
            caption=(
                "üìã <b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã China Together</b>\n\n"
                "üí° –í —Ñ–∞–π–ª–µ —É–∫–∞–∑–∞–Ω—ã:\n"
                "‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –≤–µ—Å–æ–≤—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n"
                "‚Ä¢ –¶–µ–Ω—ã –Ω–∞ —É–ø–∞–∫–æ–≤–∫—É (–º–µ—à–æ–∫, –∫–∞—Ä—Ç–æ–Ω, –¥–µ—Ä–µ–≤–æ)\n"
                "‚Ä¢ –¢–∞—Ä–∏—Ñ—ã –±—ã—Å—Ç—Ä–æ–π –∏ –æ–±—ã—á–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏\n"
                "‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥\n\n"
                f"üìÖ –î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y')}\n\n"
                "üì∫ –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: <a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>"
            ),
            parse_mode="HTML"
        )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        await loading_message.delete()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –ë–î
        save_user_action(user_id, "tariffs_downloaded", {
            "file_path": TARIFFS_PDF_PATH,
            "file_size": os.path.getsize(TARIFFS_PDF_PATH)
        })
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–∫–∞—á–∞–ª —Ç–∞—Ä–∏—Ñ—ã")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ PDF —Ç–∞—Ä–∏—Ñ–æ–≤: {e}")
        await message.reply(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–∞—Ä–∏—Ñ–æ–≤</b>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É:",
            parse_mode="HTML"
        )
        save_user_action(user_id, "tariffs_send_error", {"error": str(e)})

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–º–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ò–ò
def get_smart_response(message_text):
    text = message_text.lower()
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    if any(word in text for word in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å', 'hi', 'hello']):
        return ("üëã –ü—Ä–∏–≤–µ—Ç! –Ø —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ China Together - –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è! "
                "–ü–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å, –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã.\n\n"
                "üì∫ –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: <a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º!")
    
    # –í–æ–ø—Ä–æ—Å—ã –æ –¥–æ—Å—Ç–∞–≤–∫–µ –∏ —Ä–∞—Å—á–µ—Ç–∞—Ö
    elif any(word in text for word in ['–¥–æ—Å—Ç–∞–≤–∫–∞', '—Ä–∞—Å—á–µ—Ç', '—Å—Ç–æ–∏–º–æ—Å—Ç—å', '—Ü–µ–Ω–∞',  '–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä']):
        return ("üìä <b>–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏:</b>\n\n"
                "–î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É'. –í–∞–º –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å:\n"
                "‚Ä¢ üì¶ –ö–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ (–æ–±—ã—á–Ω—ã–µ, —Ç–µ–∫—Å—Ç–∏–ª—å, –æ–¥–µ–∂–¥–∞, –æ–±—É–≤—å)\n"
                "‚Ä¢ ‚öñÔ∏è –í–µ—Å –∏ —Ä–∞–∑–º–µ—Ä—ã –∫–∞–∂–¥–æ–π –∫–æ—Ä–æ–±–∫–∏\n"
                "‚Ä¢ üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞\n"
                "‚Ä¢ üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫\n\n"
                "–£ –Ω–∞—Å 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ —É–ø–∞–∫–æ–≤–∫–∏: –º–µ—à–æ–∫, –∫–∞—Ä—Ç–æ–Ω–Ω—ã–µ —É–≥–æ–ª–∫–∏, –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–π –∫–∞—Ä–∫–∞—Å.\n"
                "2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: –±—ã—Å—Ç—Ä–∞—è (12-15 –¥–Ω–µ–π) –∏ –æ–±—ã—á–Ω–∞—è (15-20 –¥–Ω–µ–π).\n\n"
                "üìã –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —Ç–∞—Ä–∏—Ñ–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã'\n"
                "üì∫ –ù–∞—à –∫–∞–Ω–∞–ª: <a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>")
    
    # –í–æ–ø—Ä–æ—Å—ã –æ —Ç–∞—Ä–∏—Ñ–∞—Ö
    elif any(word in text for word in ['—Ç–∞—Ä–∏—Ñ', '—Ç–∞—Ä–∏—Ñ—ã', '–ø—Ä–∞–π—Å', '—Ü–µ–Ω—ã', '—Å—Ç–æ–∏–º–æ—Å—Ç—å']):
        return ("üìã <b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:</b>\n\n"
                "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã' - –≤–∞–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω PDF —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏.\n\n"
                "üí° –í —Ñ–∞–π–ª–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ:\n"
                "‚Ä¢ –¢–∞—Ä–∏—Ñ—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –≤–µ—Å—É\n"
                "‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å —É–ø–∞–∫–æ–≤–∫–∏\n"
                "‚Ä¢ –¶–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥\n\n"
                "üì∫ –¢–∞–∫–∂–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: <a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>")
    
    # –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    elif any(word in text for word in ['—Å–ø–∞—Å–∏–±–æ', '–±–ª–∞–≥–æ–¥–∞—Ä', 'thanks', '–æ—Ç–ª–∏—á–Ω–æ', '—Ö–æ—Ä–æ—à–æ']):
        return ("üòä –ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥—ã –ø–æ–º–æ—á—å! China Together –≤—Å–µ–≥–¥–∞ –∫ –≤–∞—à–∏–º —É—Å–ª—É–≥–∞–º. "
                "–ï—Å–ª–∏ –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å. –£–¥–∞—á–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ –≤ –ö–∏—Ç–∞–µ! üá®üá≥\n\n"
                "üì∫ –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: <a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>")
    
    # –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
    else:
        return ("ü§î <b>–Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å!</b>\n\n"
                "üéØ <b>–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
                "üìä –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏\n"
                "üöö –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –∏ –≤—ã–∫—É–ø —Ç–æ–≤–∞—Ä–æ–≤\n"
                "üìã –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤\n"
                "‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n"
                "‚ùì –°–ø—Ä–∞–≤–∫–∞ –∏ –ø–æ–º–æ—â—å\n\n"
                "üì∫ –ù–∞—à –∫–∞–Ω–∞–ª —Å –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π: <a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –º–µ–Ω—é –±–æ—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º!")

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
async def clear_chat_history(message: types.Message, user_id: int):
    """–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ"""
    try:
        # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å–æ–æ–±—â–µ–Ω–∏–π (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
        for i in range(1000):
            try:
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - i)
            except:
                break  # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username or f"user_{user_id}"
    first_name = message.from_user.first_name or ""
    
    save_user_action(user_id, "start_command", {
        "username": username,
        "first_name": first_name
    })
    
    keyboard = get_main_reply_keyboard()
    
    await message.reply(
        f"üöÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>\n\n"
        "–Ø —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ China Together - –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É –∏–∑ –ö–∏—Ç–∞—è –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑!\n\n"
        "üéØ <b>–ß—Ç–æ —è —É–º–µ—é:</b>\n"
        "‚Ä¢ üìä –¢–æ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏\n"
        "‚Ä¢ üöö –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–∫—É–ø —Ç–æ–≤–∞—Ä–æ–≤\n"
        "‚Ä¢ üìã –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤\n"
        "‚Ä¢ üí¨ –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n\n"
        "üì∫ <b>–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:</b> <a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>\n\n"
        "üí° <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –º–µ–Ω—é –±–æ—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º!</b>",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

# –ö–æ–º–∞–Ω–¥–∞ /calculate - –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É
@dp.message(Command("calculate"))
async def calculate_delivery(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username or f"user_{user_id}"
    
    save_user_action(user_id, "calculate_command")
    
    keyboard = get_webapp_inline_keyboard(user_id, username, "calculate")
    await message.reply(
        "üìä <b>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–æ—Å—Ç–∞–≤–∫–∏</b>\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤–∞—à–µ–≥–æ –≥—Ä—É–∑–∞ –∏–∑ –ö–∏—Ç–∞—è.\n",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

# –ö–æ–º–∞–Ω–¥–∞ /order - –ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É
@dp.message(Command("order"))
async def order_delivery(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username or f"user_{user_id}"
    
    save_user_action(user_id, "order_command")
    
    keyboard = get_webapp_inline_keyboard(user_id, username, "order")
    await message.reply(
        "üöö <b>–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–∫–∏</b>\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–∫—É–ø –∏ –¥–æ—Å—Ç–∞–≤–∫—É —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ö–∏—Ç–∞—è.\n\n",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

# –ö–æ–º–∞–Ω–¥–∞ /tariffs - –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã
@dp.message(Command("tariffs"))
async def get_tariffs(message: types.Message):
    user_id = message.from_user.id
    save_user_action(user_id, "tariffs_command")
    await send_tariffs_pdf(message, user_id)

# –ö–æ–º–∞–Ω–¥–∞ /help - –ü–æ–º–æ—â—å
@dp.message(Command("help"))
async def help_command(message: types.Message):
    user_id = message.from_user.id
    save_user_action(user_id, "help_command")
    
    help_text = (
        "<b>‚ùì –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ—Ä–≤–∏—Å–æ–º:</b>\n\n"
        "<b>üìä –†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ (/calculate):</b>\n"
        "1Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ –º–µ–Ω—é\n"
        "2Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã\n"
        "3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç\n\n"
        "<b>üöö –ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–∫–∏ (/order):</b>\n"
        "1Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ –º–µ–Ω—é\n"
        "2Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞—è–≤–∫—É\n"
        "3Ô∏è‚É£ –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏\n\n"
        "<b>üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã (/tariffs):</b>\n"
        "–ü–æ–ª—É—á–∏—Ç–µ PDF —Å –ø–æ–ª–Ω—ã–º –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–º\n\n"
        "<b>‚ùì –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã (/faq):</b>\n"
        "–ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n\n"
        "<b>üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ (/restart):</b>\n"
        "–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞\n\n"
        "<b>üì∫ –ù–∞—à –∫–∞–Ω–∞–ª (/channel):</b>\n"
        "–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –Ω–æ–≤–æ—Å—Ç–∏\n\n"
        "üì∫ <b>–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å:</b> <a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>\n\n"
        "üí° <b>–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é –±–æ—Ç–∞!</b>"
    )
    await message.reply(help_text, parse_mode="HTML")

# –ö–æ–º–∞–Ω–¥–∞ /faq - –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
@dp.message(Command("faq"))
async def faq_command(message: types.Message):
    user_id = message.from_user.id
    save_user_action(user_id, "faq_command")
    
    keyboard = get_faq_inline_keyboard()
    await message.reply(
        "‚ùì <b>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

# –ö–æ–º–∞–Ω–¥–∞ /feedback - –û—Ç–∑—ã–≤—ã    
@dp.message(Command("feedback"))
async def feedback_command(message: types.Message):
    user_id = message.from_user.id
    save_user_action(user_id, "feedback_command")
    await message.reply(
        "üìù <b>–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</b>\n\n"
        "üîó –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –æ—Ç–∑—ã–≤—ã:\n"
        "<a href='https://t.me/feedbacktogetherchina'>https://t.me/feedbacktogetherchina</a>\n\n"
        "üì∫ <b>–¢–∞–∫–∂–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:</b>\n"
        "<a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>", 
        parse_mode="HTML"
    )

# –ö–æ–º–∞–Ω–¥–∞ /channel - –ù–∞—à –∫–∞–Ω–∞–ª
@dp.message(Command("channel"))
async def channel_command(message: types.Message):
    user_id = message.from_user.id
    save_user_action(user_id, "channel_command")
    await message.reply(
        "üì∫ <b>–ù–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª</b>\n\n"
        "–í –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ:\n"
        "‚Ä¢ üì∞ –ù–æ–≤–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏\n"
        "‚Ä¢ üí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ –ø–æ–∫—É–ø–∫–∞–º –≤ –ö–∏—Ç–∞–µ\n"
        "‚Ä¢ üìä –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã –∏ –∞–∫—Ü–∏–∏\n"
        "‚Ä¢ üéØ –õ–∞–π—Ñ—Ö–∞–∫–∏ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–µ\n\n"
        "üîó <b>–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å:</b> <a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>", 
        parse_mode="HTML"
    )

# –ö–æ–º–∞–Ω–¥–∞ /restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
@dp.message(Command("restart"))
async def restart_bot(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username or f"user_{user_id}"
    first_name = message.from_user.first_name or ""
    
    save_user_action(user_id, "restart_command")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
    await clear_chat_history(message, user_id)
    
    keyboard = get_main_reply_keyboard()
    
    await message.reply(
        f"üîÑ <b>–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!</b>\n\n"
        f"–ü—Ä–∏–≤–µ—Ç —Å–Ω–æ–≤–∞, {first_name}! –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞.\n\n"
        "üöÄ <b>China Together</b> - –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è!\n\n"
        "üí° <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –º–µ–Ω—é –±–æ—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º:</b>\n"
        "üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É\n"
        "üöö –ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É\n"
        "üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã\n"
        "‚ùì –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n\n"
        "üì∫ <b>–ù–∞—à –∫–∞–Ω–∞–ª:</b> <a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>\n\n"
        "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ reply-–∫–Ω–æ–ø–æ–∫ - —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –∫–æ–º–∞–Ω–¥—ã
@dp.message(F.text.in_([
    "üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É", 
    "üöö –ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É", 
    "üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã",
    "‚ùì –ü–æ–º–æ—â—å",
    "‚ùì –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã",
    "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞",
    "üìù –û—Ç–∑—ã–≤—ã",
    "üì∫ –ù–∞—à –∫–∞–Ω–∞–ª"
]))
async def handle_reply_buttons(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username or f"user_{user_id}"
    text = message.text
    
    save_user_action(user_id, "reply_button", {"button": text})
    
    if text == "üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É":
        await calculate_delivery(message)
    
    elif text == "üöö –ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É":
        await order_delivery(message)
    
    elif text == "üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã":
        await get_tariffs(message)
    
    elif text == "‚ùì –ü–æ–º–æ—â—å":
        await help_command(message)
    
    elif text == "‚ùì –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã":
        await faq_command(message)
    
    elif text == "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞":
        await restart_bot(message)
    
    elif text == "üìù –û—Ç–∑—ã–≤—ã":
        await feedback_command(message)
    
    elif text == "üì∫ –ù–∞—à –∫–∞–Ω–∞–ª":
        await channel_command(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫—Ä–æ–º–µ reply-–∫–Ω–æ–ø–æ–∫)
@dp.message(F.text)
async def handle_text_message(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username or f"user_{user_id}"
    text = message.text
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É, –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç reply-–∫–Ω–æ–ø–∫–∏
    button_texts = [
        "üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É", "üöö –ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É", "üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã",
        "‚ùì –ü–æ–º–æ—â—å", "‚ùì –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã", "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞", 
        "üìù –û—Ç–∑—ã–≤—ã", "üì∫ –ù–∞—à –∫–∞–Ω–∞–ª"
    ]
    
    if text in button_texts:
        return
    
    save_user_action(user_id, "text_message", {"text": text})
    
    smart_response = get_smart_response(text)
    keyboard = get_main_reply_keyboard()
    
    await message.reply(
        smart_response,
        reply_markup=keyboard,
        parse_mode="HTML"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
@dp.message(F.web_app_data)
async def handle_web_app_data(message: types.Message):
    try:
        data = json.loads(message.web_app_data.data)
        user_id = message.from_user.id
        username = message.from_user.username or f"user_{user_id}"
        action = data.get('action', '')
        
        save_user_action(user_id, f"webapp_{action}", data)
        
        if action == 'calculation_completed':
            await handle_calculation_completed(message, data, user_id, username)
        elif action == 'purchase_request_submitted':
            await handle_purchase_request_submitted(message, data, user_id, username)
        else:
            await message.reply("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
async def handle_calculation_completed(message, data, user_id, username):
    keyboard = get_webapp_inline_keyboard(user_id, username, "order")
    await message.reply(
        "‚úÖ <b>–†–∞—Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!</b>\n\n"
        f"üìä –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {data.get('category', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"‚öñÔ∏è –û–±—â–∏–π –≤–µ—Å: {data.get('totalWeight', 0)} –∫–≥\n"
        f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞: ${data.get('productCost', 0)}\n\n"
        "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(
                text="üöö –ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É", 
                web_app=WebAppInfo(url=f"{WEB_APP_URL}/order?telegram_id={user_id}&username={username}")
            )],
            [InlineKeyboardButton(text="üîÑ –ù–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç", callback_data="new_calculation")]
        ]),
        parse_mode="HTML"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏
async def handle_purchase_request_submitted(message, data, user_id, username):
    await message.reply(
        "‚úÖ <b>–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</b>\n\n"
        f"üí∞ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {data.get('order_amount', '')}\n"
        f"üì± Telegram: {data.get('telegram_contact', '')}\n\n"
        "üïê <b>–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:</b>\n"
        "–ü–ù‚Äì–ü–¢ —Å 10:00 –¥–æ 18:00 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏\n\n"
        "üì∫ <b>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ:</b>\n"
        "<a href='https://t.me/Togetherchina'>t.me/Togetherchina</a>",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìÇ –ú–æ–∏ –∑–∞—è–≤–∫–∏", callback_data="my_requests")]
        ]),
        parse_mode="HTML"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
@dp.callback_query()
async def handle_callback(callback: CallbackQuery):
    user_id = callback.from_user.id
    username = callback.from_user.username or f"user_{user_id}"
    
    if callback.data == "new_calculation":
        keyboard = get_webapp_inline_keyboard(user_id, username, "calculate")
        await callback.message.answer(
            "üîÑ –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏:",
            reply_markup=keyboard
        )
        save_user_action(user_id, "new_calculation")
    
    elif callback.data == "my_requests":
        await handle_my_requests(callback.message, user_id)
    
    elif callback.data.startswith("faq_"):
        faq_key_map = {
            "faq_min_order": "üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞",
            "faq_min_weight": "‚öñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å",
            "faq_place": "üì¶ –ß—Ç–æ —Ç–∞–∫–æ–µ –º–µ—Å—Ç–æ",
            "faq_packaging": "üì¶ –í–∏–¥—ã —É–ø–∞–∫–æ–≤–∫–∏",
            "faq_delivery_times": "üïê –°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏",
            "faq_insurance": "üìã –°—Ç—Ä–∞—Ö–æ–≤–∫–∞",
            "faq_payment": "üí≥ –ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞",
            "faq_payment_methods": "üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã",
            "faq_delivery_location": "üè¢ –ö—É–¥–∞ –ø—Ä–∏–µ–∑–∂–∞–µ—Ç —Ç–æ–≤–∞—Ä",
            "faq_regions": "üöõ –î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ä–µ–≥–∏–æ–Ω—ã",
            "faq_additional_info": "‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
            "faq_cargo_rules": "üìã –ü—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä—É–∑–∞"
        }
        
        faq_key = faq_key_map.get(callback.data)
        if faq_key and faq_key in FAQ_DATA:
            back_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîô –ö –≤–æ–ø—Ä–æ—Å–∞–º", callback_data="back_to_faq")]
            ])
            await callback.message.edit_text(
                FAQ_DATA[faq_key],
                reply_markup=back_keyboard,
                parse_mode="HTML"
            )
            save_user_action(user_id, "faq_viewed", {"question": faq_key})
    
    elif callback.data == "back_to_faq":
        keyboard = get_faq_inline_keyboard()
        await callback.message.edit_text(
            "‚ùì <b>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:",
            reply_markup=keyboard,
            parse_mode="HTML"
        )
    
    await callback.answer()

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async def handle_my_requests(message, user_id):
    requests = get_user_purchase_requests(user_id)
    if requests:
        requests_text = "<b>üìÇ –í–∞—à–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–∫—É–ø:</b>\n\n"
        for i, req in enumerate(requests[:5], 1):
            status_emoji = {
                'new': 'üÜï', 'in_review': 'üëÄ', 'approved': '‚úÖ',
                'rejected': '‚ùå', 'completed': 'üéâ'
            }.get(req['status'], '‚ùì')
            
            requests_text += (
                f"{i}. {status_emoji} {req['created_at'][:16]}\n"
                f"   üí∞ –°—É–º–º–∞: {req['order_amount']}\n"
                f"   üìß Email: {req['email']}\n\n"
            )
        await message.reply(requests_text, parse_mode="HTML")
    else:
        username = message.from_user.username or f"user_{user_id}"
        keyboard = get_webapp_inline_keyboard(user_id, username, "order")
        await message.reply(
            "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–∫—É–ø.\n\n"
            "–•–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É?",
            reply_markup=keyboard
        )
    save_user_action(user_id, "view_requests")

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—ã–∫—É–ø
def get_user_purchase_requests(telegram_id):
    conn = connect_to_db()
    if not conn:
        return []
    
    try:
        cursor = conn.cursor()
        cursor.execute("""
            SELECT pr.*, u.telegram_id
            FROM delivery_test.purchase_requests pr
            JOIN delivery_test.telegram_users u ON pr.telegram_user_id = u.id
            WHERE u.telegram_id = %s
            ORDER BY pr.created_at DESC
            LIMIT 10
        """, (str(telegram_id),))
        
        columns = [desc[0] for desc in cursor.description]
        results = []
        for row in cursor.fetchall():
            record = dict(zip(columns, row))
            record['created_at'] = record['created_at'].strftime('%Y-%m-%d %H:%M')
            results.append(record)
        
        cursor.close()
        return results
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫: {e}")
        return []
    finally:
        conn.close()

# –£–¥–∞–ª–µ–Ω–∏–µ webhook
async def delete_webhook():
    await bot.delete_webhook()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await delete_webhook()
    await set_bot_commands()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    logger.info("ü§ñ China Together Bot –∑–∞–ø—É—â–µ–Ω!")
    logger.info(f"üåê Web App URL: {WEB_APP_URL}")
    logger.info(f"üìã Tariffs PDF Path: {TARIFFS_PDF_PATH}")
    logger.info("üìã –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
