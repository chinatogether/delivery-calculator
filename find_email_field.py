#!/usr/bin/env python3
"""
–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ entry ID –¥–ª—è email –ø–æ–ª—è –≤ Google Forms
"""

import requests
import re
import json
from bs4 import BeautifulSoup
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def find_email_entry_id():
    """
    –ò—â–µ—Ç entry ID –¥–ª—è email –ø–æ–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
    """
    form_url = "https://docs.google.com/forms/d/e/1FAIpQLSfONB0hP9sCKurPmcyuHyAj_ffmF2tmLrum9kKlyMSWqDGm_w/viewform"
    
    try:
        logger.info("üîç –ü–æ–∏—Å–∫ entry ID –¥–ª—è email –ø–æ–ª—è...")
        
        session = requests.Session()
        session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        })
        
        response = session.get(form_url, timeout=30)
        response.raise_for_status()
        
        html_content = response.text
        
        print("üìã –ê–ù–ê–õ–ò–ó EMAIL –ü–û–õ–Ø –í GOOGLE FORMS")
        print("=" * 50)
        
        # 1. –ò—â–µ–º –≤—Å–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è email –≤ HTML
        email_patterns = [
            r'email.*?entry\.(\d+)',
            r'entry\.(\d+).*?email',
            r'emailAddress.*?entry\.(\d+)',
            r'entry\.(\d+).*?emailAddress',
            r'–ø–æ—á—Ç.*?entry\.(\d+)',
            r'entry\.(\d+).*?–ø–æ—á—Ç',
            r'—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω.*?entry\.(\d+)',
            r'entry\.(\d+).*?—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω'
        ]
        
        found_entries = set()
        
        for pattern in email_patterns:
            matches = re.findall(pattern, html_content, re.IGNORECASE)
            for match in matches:
                found_entries.add(f"entry.{match}")
        
        print(f"üîç –ù–∞–π–¥–µ–Ω–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö email entry: {len(found_entries)}")
        for entry in sorted(found_entries):
            print(f"   - {entry}")
        
        # 2. –ò—â–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–ª—è Google Forms –¥–ª—è email
        standard_email_fields = [
            'emailAddress',
            'email',
            'entry.email',
            'emailReceipt'
        ]
        
        print(f"\nüìß –°–¢–ê–ù–î–ê–†–¢–ù–´–ï EMAIL –ü–û–õ–Ø:")
        for field in standard_email_fields:
            if field in html_content:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ: {field}")
            else:
                print(f"   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ: {field}")
        
        # 3. –ò—â–µ–º –≤—Å–µ entry ID –∏ –∏—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç
        all_entries = {
            'entry.1244169801': 'Telegram contact',
            'entry.1332237779': 'Supplier link', 
            'entry.1319459294': 'Order amount',
            'entry.211960837': 'Promo code',
            'entry.363561279': 'Terms accepted'
        }
        
        print(f"\nüìù –ê–ù–ê–õ–ò–ó –ò–ó–í–ï–°–¢–ù–´–• ENTRY ID:")
        for entry_id, description in all_entries.items():
            context = find_entry_context_around(html_content, entry_id)
            print(f"   {entry_id}: {description}")
            print(f"      –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context[:100]}...")
        
        # 4. –ò—â–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ email –≤ Google Forms
        soup = BeautifulSoup(html_content, 'html.parser')
        
        # –ò—â–µ–º input –ø–æ–ª—è —Å —Ç–∏–ø–æ–º email
        email_inputs = soup.find_all('input', {'type': 'email'})
        print(f"\nüìß INPUT[TYPE=EMAIL] –ü–û–õ–Ø: {len(email_inputs)}")
        for inp in email_inputs:
            attrs = inp.attrs
            print(f"   –ê—Ç—Ä–∏–±—É—Ç—ã: {attrs}")
        
        # –ò—â–µ–º –ø–æ–ª—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π email
        email_validation = soup.find_all(attrs={'data-validation': re.compile('email', re.I)})
        print(f"\n‚úÖ –ü–û–õ–Ø –° EMAIL –í–ê–õ–ò–î–ê–¶–ò–ï–ô: {len(email_validation)}")
        for field in email_validation:
            print(f"   {field.attrs}")
        
        # 5. –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è
        print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        
        if found_entries:
            print(f"üîç –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —ç—Ç–∏ entry ID –¥–ª—è email:")
            for entry in sorted(found_entries):
                print(f"   'email': '{entry}',")
        
        print(f"\nüìß –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–ª—è:")
        print(f"   'email': 'emailAddress',")
        print(f"   'email': 'email',")
        
        # 6. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ URLs
        print(f"\nüß™ –¢–ï–°–¢–û–í–´–ï –°–°–´–õ–ö–ò:")
        
        test_email = "test@example.com"
        base_url = form_url.replace('/viewform', '/viewform?usp=pp_url')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–ª—è
        for field in ['emailAddress', 'email']:
            test_url = f"{base_url}&{field}={test_email}"
            print(f"   {field}: {test_url}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ entry
        for entry in sorted(found_entries):
            test_url = f"{base_url}&{entry}={test_email}"
            print(f"   {entry}: {test_url}")
        
        return found_entries
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ email –ø–æ–ª—è: {e}")
        return set()

def find_entry_context_around(html_content, entry_id):
    """–ù–∞—Ö–æ–¥–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ–∫—Ä—É–≥ entry ID"""
    try:
        entry_num = entry_id.replace('entry.', '')
        pattern = rf'.{{0,100}}{entry_num}.{{0,100}}'
        match = re.search(pattern, html_content, re.IGNORECASE)
        if match:
            context = match.group(0)
            # –£–±–∏—Ä–∞–µ–º HTML —Ç–µ–≥–∏
            context = re.sub(r'<[^>]+>', ' ', context)
            context = ' '.join(context.split())
            return context
        return "–ö–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
    except:
        return "–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞"

def test_email_fields():
    """
    –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ email –ø–æ–ª–µ–π
    """
    print(f"\nüß™ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ EMAIL –ü–û–õ–Ø:")
    print("=" * 50)
    
    base_form_url = "https://docs.google.com/forms/d/e/1FAIpQLSfONB0hP9sCKurPmcyuHyAj_ffmF2tmLrum9kKlyMSWqDGm_w/viewform"
    test_email = "test@example.com"
    
    test_fields = [
        'emailAddress',
        'email',
        'entry.email',
        'emailReceipt'
    ]
    
    print("1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –∫–∞–∂–¥—É—é –∏–∑ —ç—Ç–∏—Ö —Å—Å—ã–ª–æ–∫:")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–ø–æ–ª–Ω–∏–ª–æ—Å—å –ª–∏ –ø–æ–ª–µ email –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    print("3. –ï—Å–ª–∏ –¥–∞ - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ –ø–æ–ª–µ –≤ –º–∞–ø–ø–∏–Ω–≥–µ")
    print()
    
    for field in test_fields:
        test_url = f"{base_form_url}?{field}={test_email}"
        print(f"   üîó –¢–µ—Å—Ç {field}:")
        print(f"      {test_url}")
        print()
    
    print("üìù –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
    print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–æ—Ä–º—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("   2. –ù–∞–π–¥–∏—Ç–µ –ø–æ–ª–µ Email")
    print("   3. –ù–∞–∂–º–∏—Ç–µ F12 ‚Üí Elements")
    print("   4. –ù–∞–π–¥–∏—Ç–µ <input> –¥–ª—è email –ø–æ–ª—è")
    print("   5. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∞—Ç—Ä–∏–±—É—Ç name='...'")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü–û–ò–°–ö EMAIL ENTRY ID –í GOOGLE FORMS")
    print("=" * 50)
    
    # –ò—â–µ–º email entry ID
    found_entries = find_email_entry_id()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
    test_email_fields()
    
    print(f"\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –≤—ã—à–µ")
    print("2. –ù–∞–π–¥–∏—Ç–µ —Ä–∞–±–æ—á–µ–µ –ø–æ–ª–µ –¥–ª—è email")
    print("3. –û–±–Ω–æ–≤–∏—Ç–µ field_mapping –≤ google_forms_sender.py")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python google_forms_sender.py")

if __name__ == "__main__":
    main()
