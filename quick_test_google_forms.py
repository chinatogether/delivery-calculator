#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Google Forms —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ entry ID
"""

import requests
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Forms"""
    
    # URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    form_url = "https://docs.google.com/forms/d/e/1FAIpQLSfONB0hP9sCKurPmcyuHyAj_ffmF2tmLrum9kKlyMSWqDGm_w/formResponse"
    
    # –¢–æ—á–Ω—ã–µ entry ID –∏–∑ FB_PUBLIC_LOAD_DATA_
    test_data = {
        'emailAddress': 'test@example.com',           # Email –ø–æ–ª–µ
        'entry.1244169801': '@test_user_telegram',    # Telegram
        'entry.1332237779': 'https://test-supplier.com/product',  # –ü–æ—Å—Ç–∞–≤—â–∏–∫  
        'entry.1319459294': '5000-10000 —é–∞–Ω–µ–π',       # –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞
        'entry.211960837': 'TEST123',                 # –ü—Ä–æ–º–æ–∫–æ–¥
        # Checkbox –ø–æ–ª–µ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ–ø—Ü–∏–∏ –∏–∑ —Ñ–æ—Ä–º—ã
        'entry.363561279': '–Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω(–∞) —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Ä–∞–±–æ—Ç—ã –∏ –≤—ã—Ä–∞–∂–∞—é —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –Ω–∏–º–∏.'
    }
    
    print("üß™ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ GOOGLE FORMS")
    print("=" * 40)
    print("üìã –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    for field, value in test_data.items():
        print(f"   {field}: {value}")
    print()
    
    try:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        session = requests.Session()
        session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
            'Content-Type': 'application/x-www-form-urlencoded'
        })
        
        logger.info("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Google Form...")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        response = session.post(
            form_url,
            data=test_data,
            timeout=30,
            allow_redirects=True
        )
        
        print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   URL –æ—Ç–≤–µ—Ç–∞: {response.url}")
        print(f"   –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        success_indicators = [
            'formresponse',
            'thanks', 
            'submitted',
            'success',
            'viewanalytics'
        ]
        
        response_url_lower = response.url.lower()
        is_success = any(indicator in response_url_lower for indicator in success_indicators)
        
        if response.status_code == 200 and is_success:
            print("   ‚úÖ –£–°–ü–ï–•! –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Google Form")
            return True
        elif 'viewform' in response_url_lower:
            print("   ‚ö†Ô∏è  –§–æ—Ä–º–∞ –≤–µ—Ä–Ω—É–ª–∞—Å—å –∫ viewform - –≤–æ–∑–º–æ–∂–Ω–∞ –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
            print("   üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö")
            return False
        else:
            print(f"   ‚ùå –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            print(f"   üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ entry ID")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û–®–ò–ë–ö–ê: {e}")
        return False

def create_prefilled_test_link():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    
    base_url = "https://docs.google.com/forms/d/e/1FAIpQLSfONB0hP9sCKurPmcyuHyAj_ffmF2tmLrum9kKlyMSWqDGm_w/viewform"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    test_params = {
        'emailAddress': 'test@example.com',
        'entry.1244169801': '@test_user',
        'entry.1332237779': 'https://test-supplier.com',
        'entry.1319459294': '10000-15000 —é–∞–Ω–µ–π',
        'entry.211960837': 'TESTCODE',
        'entry.363561279': '–Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω(–∞) —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Ä–∞–±–æ—Ç—ã –∏ –≤—ã—Ä–∞–∂–∞—é —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –Ω–∏–º–∏.'
    }
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    params_str = '&'.join([f"{k}={requests.utils.quote(str(v))}" for k, v in test_params.items() if v])
    prefilled_url = f"{base_url}?{params_str}"
    
    print(f"\nüîó –ü–†–ï–î–ó–ê–ü–û–õ–ù–ï–ù–ù–ê–Ø –°–°–´–õ–ö–ê –î–õ–Ø –†–£–ß–ù–û–ô –ü–†–û–í–ï–†–ö–ò:")
    print("=" * 60)
    print(prefilled_url)
    print()
    print("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–∏–ª–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("3. –ï—Å–ª–∏ –¥–∞ - –º–∞–ø–ø–∏–Ω–≥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π!")
    print("4. –ï—Å–ª–∏ –Ω–µ—Ç - –Ω—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ entry ID")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï GOOGLE FORMS –ò–ù–¢–ï–ì–†–ê–¶–ò–ò")
    print("=" * 50)
    
    # 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–ø–ø–∏–Ω–≥
    print("üìã –ò–°–ü–û–õ–¨–ó–£–ï–ú–´–ô –ú–ê–ü–ü–ò–ù–ì (–∏–∑ FB_PUBLIC_LOAD_DATA_):")
    mapping = {
        'email': 'emailAddress',
        'telegram_contact': 'entry.1244169801',
        'supplier_link': 'entry.1332237779', 
        'order_amount': 'entry.1319459294',
        'promo_code': 'entry.211960837',
        'terms_accepted': 'entry.363561279'
    }
    
    for field, entry in mapping.items():
        print(f"   {field:15} ‚Üí {entry}")
    print()
    
    # 2. –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É
    create_prefilled_test_link()
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
    print(f"\nüß™ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ –û–¢–ü–†–ê–í–ö–ò:")
    print("=" * 40)
    
    success = quick_test()
    
    print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    if success:
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω! Google Forms –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python app.py")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
        print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –≤—ã—à–µ")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω—è—é—Ç—Å—è")
        print("   3. –ï—Å–ª–∏ –Ω–µ—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ entry ID –≤ –∫–æ–¥–µ")

if __name__ == "__main__":
    main()
