import requests
import logging
from urllib.parse import urlencode
import time
from datetime import datetime
import pytz
import concurrent.futures
from typing import Dict, Optional

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

MOSCOW_TZ = pytz.timezone('Europe/Moscow')

def get_moscow_time():
    return datetime.now(MOSCOW_TZ)

class GoogleFormsSender:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Google Forms"""
    
    def __init__(self):
        # URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Google Form
        self.form_url = "https://docs.google.com/forms/d/e/1FAIpQLSfONB0hP9sCKurPmcyuHyAj_ffmF2tmLrum9kKlyMSWqDGm_w/formResponse"
        
        # –¢–û–ß–ù–´–ô –º–∞–ø–ø–∏–Ω–≥ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã (–∏–∑ FB_PUBLIC_LOAD_DATA_)
        self.field_mapping = {
            # Email –ø–æ–ª–µ - Google Forms —Å–æ–±–∏—Ä–∞–µ—Ç email –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            'email': 'emailAddress',
            # –î–∞–Ω–Ω—ã–µ –∏–∑ FB_PUBLIC_LOAD_DATA_:
            'telegram_contact': 'entry.1244169801',    # [848184379] "–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –ª–∏—á–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º"
            'supplier_link': 'entry.1332237779',       # [1776711643] "–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–∞ 1688"  
            'order_amount': 'entry.1319459294',        # [423871719] "–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑?"
            'promo_code': 'entry.211960837',           # [833179138] "–ü—Ä–æ–º–æ–∫–æ–¥"
            'terms_accepted': 'entry.363561279'        # [1814089819] "–û—Ç–ø—Ä–∞–≤–ª—è—è –∑–∞—è–≤–∫—É, –í—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å" (CHECKBOX!)
        }
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è email (–µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
        self.email_alternatives = [
            'emailAddress',
            'email', 
            'entry.email',
            'emailReceipt',
        ]
        
        # Executor –¥–ª—è –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        self.executor = concurrent.futures.ThreadPoolExecutor(
            max_workers=2, 
            thread_name_prefix="google_forms"
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
        self.session = requests.Session()
        self.session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
            'Content-Type': 'application/x-www-form-urlencoded'
        })
        
        logger.info("GoogleFormsSender –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –º–∞–ø–ø–∏–Ω–≥–æ–º")
    
    def send_form_data(self, order_data: Dict) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Google Form (–Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∞—è)"""
        try:
            logger.info(f"üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_data.get('request_id')}")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤ executor
            future = self.executor.submit(self._send_form_worker, order_data)
            
            # –ù–ï –∂–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç - —ç—Ç–æ –¥–µ–ª–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–µ–π
            logger.info(f"üìù –ó–∞–¥–∞—á–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_data.get('request_id')} –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–¥–∞—á–∏ Google Form –≤ –æ—á–µ—Ä–µ–¥—å: {e}")
            return False
    
    def _send_form_worker(self, order_data: Dict) -> bool:
        """Worker –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Google Form –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        try:
            logger.info(f"üìù –ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_data.get('request_id')}")
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            form_data = self._prepare_form_data(order_data)
            
            if not form_data:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è Google Form")
                return False
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å retry –ª–æ–≥–∏–∫–æ–π
            success = self._submit_to_google_form(form_data, max_retries=3)
            
            if success:
                logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Google Form –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_data.get('request_id')}")
            else:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Google Form –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_data.get('request_id')}")
            
            return success
            
        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ Google Forms worker: {e}")
            return False
    
    def _prepare_form_data(self, order_data: Dict) -> Optional[Dict]:
        """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form"""
        try:
            # –ò–∑ –∞–Ω–∞–ª–∏–∑–∞ FB_PUBLIC_LOAD_DATA_ –≤–∏–¥–Ω–æ, —á—Ç–æ "–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞" - —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
            # –ù–ï select, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–µ–¥–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ –µ—Å—Ç—å
            order_amount = order_data.get('order_amount', '')
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º—ã
            form_data = {}
            
            # Email - –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
            email = order_data.get('email', '')
            if email:
                # –ü—Ä–æ–±—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
                form_data[self.field_mapping['email']] = email
                # –î–æ–±–∞–≤–ª—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
                for alt_email_field in self.email_alternatives:
                    if alt_email_field != self.field_mapping['email']:
                        form_data[alt_email_field] = email
            
            # –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è - —Ç–æ—á–Ω–æ –ø–æ –º–∞–ø–ø–∏–Ω–≥—É –∏–∑ FB_PUBLIC_LOAD_DATA_
            form_data.update({
                self.field_mapping['telegram_contact']: order_data.get('telegram_contact', ''),
                self.field_mapping['supplier_link']: order_data.get('supplier_link', ''),
                self.field_mapping['order_amount']: order_amount,  # –ü–µ—Ä–µ–¥–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
                self.field_mapping['promo_code']: order_data.get('promo_code', ''),
            })
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–≥–ª–∞—Å–∏—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ - —ç—Ç–æ CHECKBOX –ø–æ–ª–µ!
            if order_data.get('terms_accepted'):
                # –î–ª—è checkbox –≤ Google Forms –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ–ø—Ü–∏–∏
                # –ò–∑ FB_PUBLIC_LOAD_DATA_: "–Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω(–∞)..."
                form_data[self.field_mapping['terms_accepted']] = '–Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω(–∞) —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Ä–∞–±–æ—Ç—ã –∏ –≤—ã—Ä–∞–∂–∞—é —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –Ω–∏–º–∏.'
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Å—Å—ã–ª–∫–µ –Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
            additional_notes = order_data.get('additional_notes', '').strip()
            if additional_notes:
                current_supplier = form_data.get(self.field_mapping['supplier_link'], '')
                if current_supplier:
                    form_data[self.field_mapping['supplier_link']] = f"{current_supplier}\n\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:\n{additional_notes}"
                else:
                    form_data[self.field_mapping['supplier_link']] = f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:\n{additional_notes}"
            
            # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            form_data = {k: v for k, v in form_data.items() if v}
            
            logger.info(f"üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è Google Form –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã: {len(form_data)} –ø–æ–ª–µ–π")
            logger.debug(f"üìù –ü–æ–ª—è —Ñ–æ—Ä–º—ã: {list(form_data.keys())}")
            
            return form_data
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Google Form: {e}")
            return None
    
    def _submit_to_google_form(self, form_data: Dict, max_retries: int = 3) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Google Form —Å retry –ª–æ–≥–∏–∫–æ–π"""
        for attempt in range(max_retries):
            try:
                logger.info(f"üìù –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_retries} –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form")
                logger.debug(f"üìù –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ: {form_data}")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å
                response = self.session.post(
                    self.form_url,
                    data=form_data,
                    timeout=30,
                    allow_redirects=True
                )
                
                logger.info(f"üìù –û—Ç–≤–µ—Ç –æ—Ç Google Forms: —Å—Ç–∞—Ç—É—Å {response.status_code}, URL: {response.url}")
                
                # Google Forms –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –∫–æ–¥—ã
                if response.status_code in [200, 302]:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—Å–ø–µ—Ö–∞
                    if any(keyword in response.url.lower() for keyword in ['formresponse', 'thanks', 'submitted']):
                        logger.info(f"‚úÖ Google Form —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1})")
                        return True
                    elif 'viewform' in response.url.lower():
                        logger.warning(f"‚ö†Ô∏è –§–æ—Ä–º–∞ –≤–µ—Ä–Ω—É–ª–∞—Å—å –∫ viewform - –≤–æ–∑–º–æ–∂–Ω–æ, –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
                    else:
                        logger.info(f"‚úÖ –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, URL –æ—Ç–≤–µ—Ç–∞: {response.url}")
                        return True
                else:
                    logger.warning(f"‚ö†Ô∏è –ù–µ—É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç Google Form: —Å—Ç–∞—Ç—É—Å {response.status_code}")
                
            except requests.exceptions.Timeout:
                logger.warning(f"‚è∞ –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Google Form (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1})")
            except requests.exceptions.RequestException as e:
                logger.warning(f"üåê –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Google Form (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {e}")
            except Exception as e:
                logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Google Form (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {e}")
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
            if attempt < max_retries - 1:
                time.sleep(2 ** attempt)  # –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
        
        logger.error(f"‚ùå –í—Å–µ {max_retries} –ø–æ–ø—ã—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form –Ω–µ—É—Å–ø–µ—à–Ω—ã")
        return False
    
    def test_form_submission(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Å –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"""
        test_data = {
            'request_id': 999999,
            'email': 'test@example.com',
            'telegram_contact': '@test_user',
            'supplier_link': 'https://example.com/test-product',
            'order_amount': '5000-10000 —é–∞–Ω–µ–π',
            'promo_code': 'TEST123',
            'additional_notes': '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
            'terms_accepted': True
        }
        
        logger.info("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Google Form —Å –æ—Ç–ª–∞–¥–∫–æ–π")
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∞
        form_data = self._prepare_form_data(test_data)
        if form_data:
            logger.info(f"üìã –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
            for field, value in form_data.items():
                logger.info(f"   {field}: {value}")
            
            success = self._submit_to_google_form(form_data, max_retries=1)
            return success
        else:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
            return False
    
    def create_prefilled_url(self, test_data):
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞–ø–ø–∏–Ω–≥–∞"""
        try:
            view_url = self.form_url.replace('/formResponse', '/viewform')
            
            params = []
            form_data = self._prepare_form_data(test_data)
            if form_data:
                for field, value in form_data.items():
                    if value:
                        params.append(f"{field}={requests.utils.quote(str(value))}")
            
            prefilled_url = f"{view_url}?" + "&".join(params)
            
            logger.info(f"üîó –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {len(prefilled_url)} —Å–∏–º–≤–æ–ª–æ–≤")
            return prefilled_url
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏: {e}")
            return None
    
    def send_form_data_sync(self, order_data: Dict) -> bool:
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Google Form (–¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ª—É—á–∞–µ–≤)"""
        try:
            logger.info(f"üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Google Form –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_data.get('request_id')}")
            
            future = self.executor.submit(self._send_form_worker, order_data)
            result = future.result(timeout=15)  # –ñ–¥–µ–º –º–∞–∫—Å–∏–º—É–º 15 —Å–µ–∫—É–Ω–¥
            
            if result:
                logger.info(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Google Form —É—Å–ø–µ—à–Ω–∞ –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_data.get('request_id')}")
            else:
                logger.error(f"‚ùå –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Google Form –Ω–µ—É—Å–ø–µ—à–Ω–∞ –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_data.get('request_id')}")
            
            return result
            
        except concurrent.futures.TimeoutError:
            logger.error(f"‚è∞ –¢–∞–π–º–∞—É—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_data.get('request_id')}")
            return False
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form: {e}")
            return False
    
    def update_field_mapping(self, new_mapping: Dict[str, str]):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∞–ø–ø–∏–Ω–≥–∞ –ø–æ–ª–µ–π"""
        self.field_mapping.update(new_mapping)
        logger.info(f"üìù –ú–∞–ø–ø–∏–Ω–≥ –ø–æ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω: {new_mapping}")
    
    def get_status(self) -> Dict:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å Google Forms –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è"""
        return {
            "form_url": self.form_url,
            "fields_mapped": len(self.field_mapping),
            "executor_active": not self.executor._shutdown if hasattr(self.executor, '_shutdown') else True,
            "field_mapping": self.field_mapping,
            "email_alternatives": self.email_alternatives
        }
    
    def __del__(self):
        """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞"""
        try:
            if hasattr(self, 'session') and self.session:
                self.session.close()
            if hasattr(self, 'executor') and self.executor:
                self.executor.shutdown(wait=False)
        except Exception as e:
            logger.warning(f"–ü—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ Google Forms —Ä–µ—Å—É—Ä—Å–æ–≤: {e}")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
google_forms_sender = None

def get_google_forms_sender():
    """–ü–æ–ª—É—á–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è Google Forms"""
    global google_forms_sender
    if google_forms_sender is None:
        google_forms_sender = GoogleFormsSender()
    return google_forms_sender

def send_to_google_form(order_data: Dict) -> bool:
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Google Form"""
    try:
        sender = get_google_forms_sender()
        
        logger.info(f"üìù –ó–∞–ø—É—Å–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_data.get('request_id')}")
        
        return sender.send_form_data(order_data)
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form: {e}")
        return False

def send_to_google_form_sync(order_data: Dict) -> bool:
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form"""
    try:
        sender = get_google_forms_sender()
        return sender.send_form_data_sync(order_data)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form: {e}")
        return False

def test_google_form():
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Form"""
    test_data = {
        'request_id': 999999,
        'email': 'test@example.com',
        'telegram_contact': '@test_user',
        'supplier_link': 'https://example.com/product',
        'order_amount': '5000-10000 —é–∞–Ω–µ–π',
        'promo_code': 'TEST2024',
        'additional_notes': '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ',
        'terms_accepted': True
    }
    
    logger.info("üß™ –ó–∞–ø—É—Å–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Google Form")
    
    sender = get_google_forms_sender()
    
    # 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    status = sender.get_status()
    logger.info(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {status}")
    
    # 2. –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    prefilled_url = sender.create_prefilled_url(test_data)
    if prefilled_url:
        print(f"\nüîó –ü–†–ï–î–ó–ê–ü–û–õ–ù–ï–ù–ù–ê–Ø –°–°–´–õ–ö–ê –î–õ–Ø –ü–†–û–í–ï–†–ö–ò:")
        print("=" * 60)
        print(prefilled_url)
        print("\n–û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞–ø–ø–∏–Ω–≥–∞!")
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
    result = sender.test_form_submission()
    
    print(f"\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {'‚úÖ –£—Å–ø–µ—Ö' if result else '‚ùå –ù–µ—É–¥–∞—á–∞'}")
    
    if not result:
        print(f"\nüí° –ï–°–õ–ò –¢–ï–°–¢ –ù–ï –ü–†–û–®–ï–õ:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ entry ID –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ")
        print("2. –û—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª–µ email")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python find_email_field.py")
        print("4. –û–±–Ω–æ–≤–∏—Ç–µ field_mapping —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ ID")
    
    return result

if __name__ == '__main__':
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–∞–ø–ø–∏–Ω–≥
    sender = get_google_forms_sender()
    print("üìã –¢–ï–ö–£–©–ò–ô –ú–ê–ü–ü–ò–ù–ì –ü–û–õ–ï–ô:")
    print("=" * 40)
    for field, entry in sender.field_mapping.items():
        print(f"   {field:15} ‚Üí {entry}")
    
    print(f"\nüìù –ù–ê–ô–î–ï–ù–ù–´–ï ENTRY ID:")
    print("   entry.1244169801 ‚Üí Telegram contact")
    print("   entry.1332237779 ‚Üí Supplier link") 
    print("   entry.1319459294 ‚Üí Order amount")
    print("   entry.211960837  ‚Üí Promo code")
    print("   entry.363561279  ‚Üí Terms accepted")
    
    print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: EMAIL –ü–û–õ–ï")
    print("   –¢–µ–∫—É—â–∏–π –º–∞–ø–ø–∏–Ω–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç 'emailAddress'")
    print("   –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python find_email_field.py")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º
    test_google_form()
    time.sleep(5)  # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    logger.info("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Google Form –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
